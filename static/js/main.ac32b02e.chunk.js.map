{"version":3,"sources":["utils/utils.js","components/message.js","components/header.js","components/input.js","containers/Thread.js","serviceWorker.js","index.js","logo.svg"],"names":["RealTime","date","Date","hours","getHours","mins","getMinutes","RandomNumber","min","max","isInt","num","Math","random","round","value","precision","multiplier","pow","useStyles","makeStyles","theme","root","flexGrow","transformOrigin","paper","padding","spacing","textAlign","color","palette","text","secondary","borderRadius","me","backgroundColor","lblue","marginBottom","messageBox","breakpoints","down","maxWidth","up","Message","props","classes","from","classNames","Fragment","Grow","in","className","Box","display","flexDirection","p","Paper","Typography","variant","message","margin","title","Header","contact","action","AppBar","Toolbar","IconButton","edge","Divider","orientation","flexItem","light","onClick","width","marginTop","top","bottom","form","marginBlockEnd","input","maxHeight","overflow","border","msg","Input","React","useState","setMessage","position","onSubmit","event","preventDefault","t","m","noValidate","autoComplete","Grid","container","alignItems","item","xs","FormControl","fullWidth","OutlinedInput","id","placeholder","inputProps","onChange","val","target","prevState","type","name","responses","possibleWords","response","optional","person","Thread","messages","setMessages","messageQueue","setMessageQueue","addMessage","useEffect","window","scrollTo","document","body","scrollHeight","behavior","length","res","i","tmpI","iter","filter","w","toLowerCase","indexOf","Number","isInteger","splice","pop","checkResponse","q","timer","setTimeout","shift","push","allMessages","map","key","console","log","JSON","stringify","style","height","Boolean","location","hostname","match","ReactDOM","render","StrictMode","CssBaseline","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.ac32b02e.chunk.js","sourcesContent":["export function RealTime() {\r\n  let date = new Date();\r\n  let hours = date.getHours();\r\n  let mins = date.getMinutes();\r\n\r\n  return `${hours % 12 || 12}:${mins} ${hours > 11 ? \"PM\" : \"AM\"}`;\r\n}\r\n\r\nexport function RandomNumber(min, max, isInt) {\r\n  let num = Math.random() * (max - min + 1) + min;\r\n  if (isInt) num = round(num);\r\n  else num = round(num, 2);\r\n  return num;\r\n}\r\n\r\nfunction round(value, precision) {\r\n  var multiplier = Math.pow(10, precision || 0);\r\n  return Math.round(value * multiplier) / multiplier;\r\n}\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport lblue from \"@material-ui/core/colors/lightBlue\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { RandomNumber } from \"../utils/utils\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    transformOrigin: \"right bottom\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: \"10px\"\r\n  },\r\n  me: {\r\n    backgroundColor: lblue[600],\r\n    color: \"rgba(255,255,255,0.9)\"\r\n  },\r\n  date: {\r\n    marginBottom: \".5em\"\r\n  },\r\n  messageBox: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: \"90%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      maxWidth: \"70%\"\r\n    }\r\n  }\r\n}));\r\n\r\nfunction Message(props) {\r\n  const classes = useStyles();\r\n  const from = props.from;\r\n  let time = RandomNumber(3, 4) * 1000;\r\n\r\n  const classNames = {\r\n    [classes.paper]: true,\r\n    [classes.me]: from === \"Me\"\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grow in className={classes.root}>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection={from === \"Me\" ? \"row-reverse\" : \"row\"}\r\n          p={1}\r\n        >\r\n          <Box className={classes.messageBox}>\r\n            <Paper className={classNames}>\r\n              <div className={classes.date}>\r\n                <Typography variant=\"caption\" className={classes.date}>\r\n                  {props.date}\r\n                </Typography>\r\n              </div>\r\n              {props.message}\r\n            </Paper>\r\n          </Box>\r\n        </Box>\r\n      </Grow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  IoMdArrowRoundBack,\r\n  IoMdInformationCircleOutline\r\n} from \"react-icons/io\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& hr\": {\r\n      margin: theme.spacing(0, 2, 0, 0)\r\n    }\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nfunction Header({ contact, action }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\">\r\n          <IoMdArrowRoundBack />\r\n        </IconButton>\r\n        <Divider orientation=\"vertical\" flexItem light />\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {contact}\r\n        </Typography>\r\n        <IconButton onClick={action} edge=\"end\" color=\"inherit\">\r\n          <IoMdInformationCircleOutline />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { AppBar, Toolbar } from \"@material-ui/core\";\r\nimport { RealTime } from \"../utils/utils\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"1em\",\r\n    top: \"auto\",\r\n    bottom: 0,\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    padding: \"10px 0\",\r\n    marginBlockEnd: \"0\"\r\n  },\r\n  input: {\r\n    maxHeight: \"150px\",\r\n    overflow: \"auto !important\"\r\n  },\r\n  border: {\r\n    borderRadius: \"25px\"\r\n  }\r\n}));\r\n\r\nconst msg = {\r\n  from: \"\",\r\n  date: \"\",\r\n  message: \"\"\r\n};\r\n\r\nfunction Input(props) {\r\n  const classes = useStyles();\r\n  const [message, setMessage] = React.useState(msg);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    let t = RealTime();\r\n    let m = message;\r\n\r\n    m.date = t;\r\n    m.from = \"Me\";\r\n\r\n    props.action(m);\r\n\r\n    setMessage(msg);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const val = event.target.value;\r\n    setMessage(prevState => {\r\n      return { ...prevState, message: val };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AppBar className={classes.root} position=\"fixed\">\r\n      <Toolbar>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={handleSubmit}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <Grid container alignItems=\"center\" spacing={3}>\r\n            <Grid item xs>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <OutlinedInput\r\n                  id=\"component-outlined\"\r\n                  placeholder=\"Your message...\"\r\n                  inputProps={{ className: classes.input }}\r\n                  onChange={handleChange}\r\n                  value={message.message}\r\n                  className={classes.border}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                type=\"submit\"\r\n                name=\"Submit\"\r\n                color=\"primary\"\r\n                edge=\"end\"\r\n              >\r\n                <IoMdSend />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Message from \"../components/message\";\r\nimport Header from \"../components/header.js\";\r\nimport Input from \"../components/input\";\r\nimport { RealTime, RandomNumber } from \"../utils/utils\";\r\n\r\nconst responses = [\r\n  {\r\n    possibleWords: [\"hey\", \"yo\", \"sup\", \"hello\"],\r\n    response: \"Whatya want!? I'm busy watchin my General Hospitals!\",\r\n    optional: true\r\n  },\r\n  {\r\n    possibleWords: [\"where\", \"someone\", \"looking\", \"info\"],\r\n    response: \"Can yous be more specific? As I said, I'm very busy right nows!\",\r\n    optional: true\r\n  },\r\n  {\r\n    possibleWords: [\"tony\"],\r\n    response:\r\n      \"I don't know no one by dat name! And even if I did, i ain't no RAT.\",\r\n    optional: false\r\n  },\r\n  {\r\n    possibleWords: [\"\"],\r\n    response:\r\n      \"I'm just messin, I hate Tony, so I'll tell ya's. but first you gotta answer a question for me...\",\r\n    optional: false\r\n  },\r\n  {\r\n    possibleWords: [\"\"],\r\n    response: \"Who would win in a fight, a taco or a grilled cheese sandwich?\",\r\n    optional: false\r\n  },\r\n  {\r\n    possibleWords: [\"\"],\r\n    response: \"Try again, scum bag\",\r\n    optional: true\r\n  },\r\n  {\r\n    possibleWords: [\"taco\", \"grilled cheese\"],\r\n    response: \"Good. Answer. Tony was hangin out at Frolic's last I saws\",\r\n    optional: false\r\n  },\r\n  {\r\n    possibleWords: [\"thank\", \"later\", \"bye\"],\r\n    response: \"Yeah whatever, now let me watch my stories in peace!\",\r\n    optional: false\r\n  }\r\n];\r\n\r\nconst person = {\r\n  name: \"\",\r\n  phone: \"(907) 555-4323\"\r\n};\r\n\r\nfunction Thread() {\r\n  const [messages, setMessages] = React.useState([]);\r\n  const [messageQueue, setMessageQueue] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\r\n\r\n    if (messages.length > 0)\r\n      if (messages[messages.length - 1].from === \"Me\") {\r\n        let res = checkResponse(messages[messages.length - 1].message);\r\n        if (res) {\r\n          let msg = {\r\n            from: person.name || person.phone,\r\n            message: res.response,\r\n            date: RealTime()\r\n          };\r\n\r\n          let timer = setTimeout(() => {\r\n            let m = messageQueue.shift();\r\n            setMessageQueue(messageQueue);\r\n            addMessage(m.msg);\r\n          }, RandomNumber(3, 6) * 1000);\r\n\r\n          let q = { timer, msg };\r\n          messageQueue.push(q);\r\n        }\r\n      }\r\n  }, [messages, messageQueue]);\r\n\r\n  function getMessages() {\r\n    console.log(JSON.stringify(messages));\r\n  }\r\n\r\n  function checkResponse(msg) {\r\n    let i, tmpI, res;\r\n    let iter = 0;\r\n    while (!res) {\r\n      if (\r\n        responses[iter]?.possibleWords.filter(\r\n          w => msg.toLowerCase().indexOf(w) > -1\r\n        ).length > 0\r\n      )\r\n        tmpI = iter;\r\n      if (responses[iter]?.optional) iter++;\r\n      else {\r\n        i = tmpI;\r\n        if (Number.isInteger(i)) res = responses.splice(0, i + 1).pop();\r\n        break;\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  function addMessage(msg) {\r\n    setMessages(prevState => [...prevState, msg]);\r\n  }\r\n\r\n  const allMessages = messages.map((msg, i) => (\r\n    <Message key={i} from={msg.from} date={msg.date} message={msg.message} />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <Header action={getMessages} contact={person.name || person.phone} />\r\n      <div style={{ height: \"75px\" }}>&nbsp;</div>\r\n      {allMessages}\r\n      <div style={{ height: \"75px\" }}>&nbsp;</div>\r\n      <Input action={addMessage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Thread;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Thread from \"./containers/Thread\";\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CssBaseline } from \"@material-ui/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Thread />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}